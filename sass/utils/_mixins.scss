@use "./variables" as var;
@use "./keyframes" as *;
@use "./placeholders" as *;

// Flex center
@mixin flex-center($just-content: center, $align: center) {
    display: flex;
    justify-content: $just-content;
    align-items: $align;
}

// Garder le ratio des images et les centrer dans leur container.
@mixin image-center {
    object-fit: cover;
    width: 100%;
    height: 100%;
}

// Tronquer le texte en ajoutant des points de suspension.
@mixin ellipse {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

// ======================================
// ANIMATIONS
// ======================================
@mixin transf-scale($scale: 1.03) {
    transform: scale($scale);
}

@mixin transition($elt: all, $duration: 500ms, $ease: ease-in-out) {
    transition: $elt $duration $ease;
}

// Animation du coeur
@mixin anim-heart($font_size: large) {
    // initialisation de la variable locale $left
    $left: 0;
    position: relative;
    font-size: $font_size;

    // =========================
    // condition pour la valeur de la variable $left
    @if ($font_size == large) {
        $left: 27px;
    }
    @if ($font_size == x-large) {
        $left: 35px;
    }
    @if ($font_size == xx-large) {
        $left: 46px;
    }
    // =========================

    i {
        // les icônes qui sont des éléments ::before doivent être en inline pour pouvoir leur appliquer un gradient !
        display: inline;
        position: relative;

        &:first-child {
            left: $left;
            color: black;
            opacity: 1;
            transition: opacity 500ms ease-in-out;
        }

        &:last-child {
            opacity: 0;
            // webkit indispensable pour conserver la forme de l'icône
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            color: transparent;
            background-image: linear-gradient(to bottom, var.$color-secondary, var.$color-primary);
            @include transition;
        }
    }

    &:hover {
        i {
            &:first-child {
                opacity: 0;
            }

            &:last-child {
                opacity: 1;
                cursor: pointer;
            }
        }
    }
}

// Animation des cartes menu qui apparaissent progressivement
@mixin anim-cards($bloc: 1.5, $card: 0.5) {
    // délai d'apparition des blocs menu en seconde
    $bloc-gap: $bloc;
    // délai d'apparition des cartes menu en seconde
    $card-gap: $card;
    @for $i from 1 through 3 {
        .bloc-cards {
            .group:nth-child(#{$i + 1}) {
                $delay: ($i - 1) * abs($bloc-gap);
                $time: 1;
                @for $j from 1 through 4 {
                    .group__dish {
                        & > .group__card:nth-child(#{$j}) {
                            animation: cards-appear 2s ease-in-out;
                            // both remplacé par backwards car celui-là bloque les transitions des animations au hover sur les cartes.
                            // animation-fill-mode: both;
                            animation-fill-mode: backwards;
                            animation-delay: calc(($j + $delay - $time) * 1s);
                            $time: calc($time - abs($card-gap) + 1);
                        }
                    }
                }
            }
        }
    }
}

// ======================================

// ======================================
// PSEUDO-ELEMENTS
// ======================================

// loader
@mixin loader {
    @include flex-center;
    position: fixed;
    @include mobile{
        font-size: 5rem;    
    }
    @include tablet-min{
        font-size: 10rem;    
        
    }
    inset: 0;
    background-image: var.$gradient-primary;
    z-index: 1;
    animation: opacity 5s ease-in-out;
    animation-fill-mode: forwards;
    &__text {
        
        p {
            // animation: display 5s;
            @include flex-center;
            position: fixed;
            inset: 0;
            color: var.$color-primary;
            animation: pendulum 6s;
            transform-origin: 50% -100px;
            $delai: 0;
            opacity: 50%;
            @for $i from 1 through 8 {
                span:nth-child(#{$i}) {
                    animation: chrome-variation 1s 6 linear;
                    animation-delay: $delai * 1s;
                    $delai: $delai + 0.2;
                }
            }
            z-index: 2;
            span {
                @extend %title-font;
            }
        }
    }
}


// Flag "Nouveau" sur les cartes
@mixin flag {
    &::before {
        content: "Nouveau";
        @include flex-center;
        border-radius: 1px;
        width: 80px;
        height: 30px;
        font-size: 1.5rem;
        font-weight: 500;
        color: #008766;
        background-color: var.$color-tertiary;
        position: absolute;
        right: 12px;
        top: 12px;
    }
}

// Soulignement
@mixin underline {
    &::after {
        content: "";
        width: 42px;
        height: 3px;
        background-color: var.$color-tertiary;
        position: absolute;
    }
}
// ======================================
// ====================================================
// RESPONSIVE
// ====================================================
@mixin largest {
    @media screen and (min-width: map-get(var.$breakpoints, largest)) {
        @content;
    }
}

@mixin tablet-min {
    @media screen and (min-width: map-get(var.$breakpoints, mobile)) {
        @content;
    }
}

@mixin mobile {
    @media screen and (max-width: map-get(var.$breakpoints, mobile)) {
        @content;
    }
}

// padding sections
// @mixin padding-sect-foot-mobile {
//     padding: 50px 10% 65px 10%;
// }

// padding sections, defaut : mobile
@mixin padding-sections($side: 10%, $modif: 1) {
    padding: (50/$modif * 1px) $side (65/$modif * 1px) $side;
}

// ====================================================
